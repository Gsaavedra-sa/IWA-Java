# Docker
# Build a Docker image
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker


trigger:
- none
stages:
- stage: Build
  jobs:
    - job: Build
      displayName: Building IWA Project
      pool:
        vmImage: ubuntu-latest
      steps:
      - task: Maven@3
        inputs:
          mavenPomFile: 'pom.xml'
          mavenOptions: '-Xmx3072m'
          javaHomeOption: 'JDKVersion'
          jdkVersionOption: '1.17'
          jdkArchitectureOption: 'x64'
          publishJUnitResults: true
          testResultsFiles: '**/surefire-reports/TEST-*.xml'
          goals: 'package'
          aadSqlPassword: 
    - job: SAST
      displayName: Fortify SAST
      dependsOn:
        - Build
      pool:
        vmImage: 'ubuntu-latest'
      container:
        image: fortifydocker/fortify-ci-tools:5.4.1-jdk-17
        env:
          FCLI_DEFAULT_SC_SAST_CLIENT_AUTH_TOKEN: $(_FCLI_DEFAULT_SC_SAST_CLIENT_AUTH_TOKEN)
          FCLI_DEFAULT_SSC_USER: $(_FCLI_DEFAULT_SSC_USER)
          FCLI_DEFAULT_SSC_PASSWORD: $(_FCLI_DEFAULT_SSC_PASSWORD)
          FCLI_DEFAULT_SSC_CI_TOKEN: $(_FCLI_DEFAULT_SSC_CI_TOKEN)
          FCLI_DEFAULT_SSC_URL: $(_FCLI_DEFAULT_SSC_URL)
          #SSC_APP_VERSION_ID: $(_SSC_APP_VERSION_ID)
          SC_SAST_SENSOR_VERSION: $(_SC_SAST_SENSOR_VERSION)
          #branchName: $(Build.SourceBranchName)
          VEC: $(_VEC)
      steps:
        - script: |
            # Define valor da variável SSC_APP baseado em teste
            if [ "$(VEC)" != "true" ]; then
              SSC_APP="Other-Version"
              echo "A variável 'VEC' está configurada como false. A herança sera feita com Other-Version no Fortify"
            else
              SSC_APP="<saitotest>:<3.0>"
              echo "A variável 'VEC' está configurada como true.A herança sera feita semanticamente correta."
              cat $SSC_APP
            fi
            echo Setting connection with Fortify Platform
            #echo "Branch Name: $branchName "
            #echo $FORTIFY_SSC_IP fortify.cyberxdemo.com >> /etc/hosts
            #Use --insecure switch if the SSL certificate is self generated.
            fcli ssc session login
            echo analisando login ssc
            #fcli ssc session list
            fcli sc-sast session login --ssc-ci-token=$FCLI_DEFAULT_SSC_CI_TOKEN --client-auth-token=$FCLI_DEFAULT_SC_SAST_CLIENT_AUTH_TOKEN --ssc-url=$FCLI_DEFAULT_SSC_URL
            echo analisando login sc-sast
            #fcli ssc session list
            fcli ssc appversion create --auto-required-attrs --skip-if-exists $SSC_APP --issue-template Prioritized-HighRisk-Project-Template
            # Cria a versão da aplicação, caso exista ele faz o skip  
            echo Empacota a Aplicação P/ Scan no SSC
            scancentral package --build-tool none -o APP.zip
            echo Envia App Para Scan no Fortify
            fcli sc-sast scan start --package-file=APP.zip --sensor-version=24.4 --publish-to $SSC_APP --ssc-ci-token $FORTIFY_CI_TOKEN --store job:jobToken
            Echo Espera Scan Concluir
            fcli sc-sast scan wait-for --any-ssc-state=PROCESS_COMPLETE --timeout=2h ::job::jobToken --store=sscArtifactId
            Write-Host --- Consulta ID do Ultimo Artefato ---
            fcli ssc appversion refresh-metrics $SSC_APP
            fcli ssc issue list --appversion=$SSC_APP
            Write-Host --- Recuperação do Ultimo Artefato Scaneado ---
            fcli ssc appversion download-state --include-sources --file='app.fpr' $SSC_APP
          displayName: "Executa análise Fortify SAST"